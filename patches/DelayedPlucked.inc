gk_DelayedPlucked_midi_dynamic_range chnexport "gk_DelayedPlucked_midi_dynamic_range", 3 ; 127
gk_DelayedPlucked_level chnexport "gk_DelayedPlucked_level", 3 ; 0

gk_DelayedPlucked_midi_dynamic_range init 20
gk_DelayedPlucked_level init 0

gk_DelayedPlucked_space_left_to_right chnexport "gk_DelayedPlucked_space_left_to_right", 3
gk_DelayedPlucked_space_left_to_right init -1

gi_DelayedPlucked_sine ftgen 0, 0, 65537, 10, 1
gi_DelayedPlucked_cosine ftgen 0, 0, 65537, 11, 1

instr DelayedPlucked
; Author: Michael Gogins
i_instrument = p1
i_time = p2
; Make indefinite notes last no longer than the physical decay.
i_physical_decay = 20
if p3 == -1 then
i_duration = i_physical_decay
else
i_duration = p3
endif
i_midi_key = p4
i_midi_dynamic_range = i(gk_DelayedPlucked_midi_dynamic_range)
i_midi_velocity = p5 * i_midi_dynamic_range / 127 + (63.5 - i_midi_dynamic_range / 2)
k_space_front_to_back = p6
k_space_left_to_right = p7
k_space_bottom_to_top = p8
i_phase = p9
i_frequency = cpsmidinn(i_midi_key)
; Adjust the following value until "overall amps" at the end of performance is about -6 dB.
i_level_correction = 83.5
i_normalization = ampdb(-i_level_correction) / 2
i_amplitude = ampdb(i_midi_velocity) * i_normalization
k_gain = ampdb(gk_DelayedPlucked_level)
iattack = 0.006
idecay = 1.5
isustain = p3
irelease = 0.05
xtratim 1
ioctave = octcps(i_frequency)
 ; Detuning of strings by 4 cents each way.
idetune = 4.0 / 1200.0
ihertzleft = cpsoct(ioctave + idetune)
ihertzright = cpsoct(ioctave - idetune)
isine = gi_DelayedPlucked_sine
icosine = gi_DelayedPlucked_cosine
igenleft = isine
igenright = icosine
kvibrato poscil 1.0 / 120.0, 7.0, icosine
a_envelope transegr 0.0, iattack, -7.0, 1.0, idecay, -7.0, 0.5, isustain, 0.0, 0.125, irelease, -7.0, 0.0
ag pluck 1, cpsoct(ioctave + kvibrato), i_frequency, igenleft, 1
ag *= a_envelope
agleft pluck 1, ihertzleft, i_frequency, igenleft, 1
agleft *= a_envelope
agright pluck 1, ihertzright, i_frequency, igenright, 1
agright *= a_envelope
imsleft = 0.2 * 1000
imsright = 0.21 * 1000
adelayleft vdelay ag, imsleft, imsleft + 100
adelayright vdelay ag, imsright, imsright + 100
asignal = a_envelope * (agleft + adelayleft + agright + adelayright)
; Highpass filter to exclude speaker cone excursions.
asignal1 butterhp asignal, 32.0
asignal2 balance asignal1, asignal
a_signal = asignal
i_declick_attack = iattack
i_declick_release = .01
; The end of the note must be extended _past_ the end of the release segment.
xtratim 1
a_declicking_envelope cossegr 0, i_declick_attack, 1,  i_duration, 1,  i_declick_release, 0
; That envelope is then low-pass filtered to remove most discontinuities.
a_filtered_envelope tonex a_declicking_envelope, 40, 4
a_signal = a_signal * i_amplitude * a_filtered_envelope * k_gain *.001

#ifdef USE_SPATIALIZATION
a_spatial_reverb_send init 0
a_bsignal[] init 16
a_bsignal, a_spatial_reverb_send Spatialize a_signal, k_space_front_to_back, k_space_left_to_right, k_space_bottom_to_top
outletv "outbformat", a_bsignal
outleta "out", a_spatial_reverb_send
#else
a_out_left, a_out_right pan2 a_signal, k_space_left_to_right
outleta "outleft", a_out_left
outleta "outright", a_out_right
#endif
prints "%-24s i %9.4f t %9.4f d %9.4f k %9.4f v %9.4f p %9.4f #%3d\n", nstrstr(p1), p1, p2, p3, p4, p5, p7, active(p1)
endin
